---
interface Props {
  title: string;
  description: string;
  longDescription?: string;
  image: string;
  tags: string[];
  github?: string;
  link?: string;
  githubUrl?: string;
  liveUrl?: string;
  slug?: string;
  isFeatured?: boolean;
  featured?: boolean;
}

const { 
  title, 
  description, 
  longDescription,
  image, 
  tags, 
  // Support both naming conventions
  github, 
  link, 
  githubUrl, 
  liveUrl,
  slug,
  isFeatured = false,
  featured = false
} = Astro.props;

// Use whichever URL is provided
const repoUrl = github || githubUrl || '';
const demoUrl = link || liveUrl || '';
const isFeatureCard = isFeatured || featured;
---

<div class={`bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-all duration-300 border border-gray-200 dark:border-gray-700 ${isFeatureCard ? 'transform hover:-translate-y-2' : ''}`}>
  <div class={`overflow-hidden ${isFeatureCard ? 'h-64' : 'h-48'}`}>
    <img 
      src={image} 
      alt={`Screenshot of ${title} project`} 
      class="w-full h-full object-cover transition-transform hover:scale-105 duration-500"
      loading="lazy"
      width="600"
      height="400"
      onerror="this.src='/images/project-placeholder.jpg'"
    />
  </div>
  
  <div class="p-5">
    <h3 class="text-xl font-bold mb-2 hover:text-primary transition-colors">
      {demoUrl ? (
        <a href={demoUrl} target="_blank" rel="noopener noreferrer" class="hover:text-primary">
          {title}
        </a>
      ) : (
        title
      )}
    </h3>
    
    <p class="text-gray-600 dark:text-gray-400 mb-4">
      {isFeatureCard && longDescription ? longDescription : description}
    </p>
    
    <div class="flex flex-wrap gap-2 mb-4">
      {tags.map(tag => (
        <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-300 rounded text-xs">
          {tag}
        </span>
      ))}
    </div>
    
    <div class="flex justify-between items-center">
      {repoUrl && (
        <a 
          href={repoUrl} 
          target="_blank" 
          rel="noopener noreferrer"
          class="text-gray-700 dark:text-gray-300 hover:text-primary transition-colors flex items-center gap-1"
          aria-label={`View ${title} source code on GitHub`}
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
          <span class="text-sm">Code</span>
        </a>
      )}
      
      {demoUrl && (
        <a 
          href={demoUrl} 
          target="_blank" 
          rel="noopener noreferrer"
          class="inline-flex items-center gap-1 text-primary hover:text-primary-dark transition-colors px-3 py-1 rounded-md hover:bg-primary/10"
          aria-label={`View live demo of ${title}`}
        >
          <span>View Project</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
          </svg>
        </a>
      )}
    </div>
  </div>
</div> 